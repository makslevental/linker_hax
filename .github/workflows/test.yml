name: Test

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
  workflow_dispatch:
    branches:
      - main

jobs:

  test:

    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest ]
        compiler: [ gcc, clang ]
        linker: [ ld, lld, mold, gold ]
        exclude:
          - os: macos-latest
            linker: lld
          - os: macos-latest
            linker: mold
          - os: macos-latest
            linker: gold

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Install linker
        if: matrix.os == 'ubuntu-latest' && matrix.linker != 'ld'
        run: |
          sudo apt-get update
          if [ ${{ matrix.linker }} == "gold" ]; then
            sudo apt-get install -y binutils-gold
          else
            sudo apt-get install -y ${{ matrix.linker }}
          fi

      - name: Build and run
        run: |
          if [ ${{ matrix.linker }} != "ld" ]; then
            cmake . \
              -DCMAKE_C_COMPILER=${{ matrix.compiler }} \
              -DCMAKE_EXE_LINKER_FLAGS_INIT="-fuse-ld=${{ matrix.linker }}"
          else
            cmake . -DCMAKE_C_COMPILER=${{ matrix.compiler }}
          fi
          
          cmake --build . --verbose && ./linker_hax
